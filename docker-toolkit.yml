version: '1.0'

services:
  redis:
    image: redis:alpine
    container_name: redis_container
    ports:
      - "6379:6379"
    volumes:
      - ./docker-conf/redis_data:/data

  mysql:
    image: mysql
    container_name: mysql_container
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./docker-conf/mysql_data:/var/lib/mysql
  
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq_container
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    volumes:
       - ./docker-conf/rabbitmq_data/data/:/var/lib/rabbitmq/
       - ./docker-conf/rabbitmq_data/log/:/var/log/rabbitmq

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper_container
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka_container
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper_container:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - kafka-network

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop_container
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKER_CONNECT: kafka_container:9092
    depends_on:
      - kafka
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge

